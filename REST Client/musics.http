@baseUrl = http://localhost:3000

### Create the admin user
POST {{baseUrl}}/auths/register
Content-Type: application/json

{
    "username":"MrPatate",
    "password":"MrPatate"
}

### Login the default admin
# @name MrPatate
POST {{baseUrl}}/auths/login
Content-Type: application/json

{
    "username":"admin",
    "password":"admin"
}

### Create a playlist
POST {{baseUrl}}/playlists/create
Content-Type: application/json
Authorization: {{MrPatate.response.body.token}}

{
    "name":"patateDamsoplaylist"
}


### Create a music should return 201
POST {{baseUrl}}/playlists/add/id
Content-Type: application/json
Authorization: {{MrPatate.response.body.token}}

{
    "idPLaylist":"1",
    "idMusic":"7d391WfC0HtftRcetDFQUy"
}

### Create a music should return 201
POST {{baseUrl}}/playlists/add/id
Content-Type: application/json
Authorization: {{MrPatate.response.body.token}}

{
    "idPLaylist":"1",
    "idMusic":"6YWjskKykdPsBuiTBOg1VK"
}


### Delete a music non existant should return 500
POST {{baseUrl}}/playlists/delete/id
Content-Type: application/json
Authorization: {{MrPatate.response.body.token}}

{
    "idPLaylist":"1",
    "idMusic":"%M/."
}

### Delete a music non existant should return 500
POST {{baseUrl}}/playlists/delete/id
Content-Type: application/json
Authorization: {{MrPatate.response.body.token}}

{
    "idPLaylist":"1",
    "idMusic":"iehdiomazejmaojedera1234567890°PMLFR45YUIOP¨£%M/."
}


### Get all playlists of user
GET {{baseUrl}}/playlists/all
Authorization: {{MrPatate.response.body.token}}